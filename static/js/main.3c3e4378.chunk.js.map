{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c3e4378.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1id4G\",\"card\":\"Cards_card__1XVKR\",\"infected\":\"Cards_infected__3TaTA\",\"recovered\":\"Cards_recovered__30aBX\",\"deaths\":\"Cards_deaths__JIBEy\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data: { confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp  start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp  start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                         <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp  start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                         <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api' \r\n\r\nexport const fetchData = async(country) =>{\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n        return {confirmed, recovered, deaths, lastUpdate }\r\n    } catch (error){\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name);\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData} from '../../api'\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({data: {confirmed, deaths, recovered}, country}) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI = async() =>{\r\n            setDailyData(await fetchDailyData());\r\n        }        \r\n                \r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart =(\r\n         dailyData[0]\r\n         ?(\r\n         <Line \r\n            data={{\r\n                labels: dailyData.map(({date})=> date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed})=> confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill:true,\r\n                }, {\r\n                    data: dailyData.map(({deaths})=> deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n                }\r\n            ], \r\n            }}\r\n         />): null\r\n    );\r\n    \r\n    const barChart =(\r\n        confirmed\r\n        ? (\r\n            <Bar \r\n                data={{\r\n                    labels: ['Infected','Recoverd','Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['orange', 'green', 'red'],\r\n                        data:[confirmed.value, recovered.value, deaths.value],\r\n                    }]\r\n\r\n                }}\r\n                options={{\r\n                    legend: {display: false},\r\n                    title: {display: true, text: `Current state in ${country}`},\r\n\r\n                }}\r\n            />\r\n        ): null\r\n    )\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart: lineChart}   \r\n       </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl, StylesProvider} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI =async() =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    \r\n    return (\r\n        <FormControl className={styles.FormControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}> \r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react'\r\n/*\r\nimport Cards from './components/Cards/Cards'\r\nimport Charts from './components/'\r\nimport Cards from './components/Cards/Cards'\r\n*/\r\n\r\nimport {Cards, Chart, CountryPicker} from './components'\r\nimport styles from './App.module.css'\r\nimport {fetchData} from './api';\r\nimport coronaImage from './images/image.png'\r\n\r\nclass App extends React.Component{\r\n    state ={\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) =>{\r\n       const fetchedData=await fetchData(country);\r\n       \r\n       this.setState({data: fetchedData, country: country});\r\n       \r\n        \r\n       // set the state \r\n    }\r\n\r\n\r\n    render(){\r\n        const { data, country }=this.state;\r\n        return(\r\n            \r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data= {data}/>\r\n                <CountryPicker handleCountryChange= {this.handleCountryChange}/>\r\n                <Chart data={data} country={country} />                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__28-GZ\",\"image\":\"App_image__3XTB-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1VMLh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3ItSC\"};","module.exports = __webpack_public_path__ + \"static/media/image.107ad235.png\";"],"sourceRoot":""}